tetro = [
    ((0, 0), (0, 1), (0, 2), (0, 3)),
    ((0, 0),
     (1, 0),
     (2, 0),
     (3, 0)),

    ((0, 0), (0, 1),
     (1, 0), (1, 1)),

    ((0, 0),
     (1, 0),
     (2, 0), (2, 1)),
    ((0, 0),
     (1, 0),
     (2, -1), (2, 0)),
    ((0, 0), (0, 1),
     (1, 0),
     (2, 0)),
    ((0, -1), (0, 0),
     (1, 0),
     (2, 0)),
    ((0, 0), (0, 1), (0, 2),
     (1, 0)),
    ((0, 0),
     (1, 0), (1, 1), (1, 2)),
    ((0, 0), (0, 1), (0, 2),
     (1, 2)),
    ((0, 0), (0, 1), (0, 2),
     (-1, 2)),

    ((0, 0),
     (1, 0), (1, 1),
     (2, 1)),
    ((0, 0), (0, 1), (-1, 1), (-1, 2)),
    ((0, 0), (0, 1), (1, 1), (1, 2)),
    ((0, 0), (1, 0), (1, -1), (2, -1)),

    ((0, 0), (0, 1), (0, 2),
     (1, 1)),
    ((0, 0), (0, 1), (0, 2),
     (-1, 1)),
    ((0, 0),
     (1, 0), (1, 1),
     (2, 0)),
    ((0, 0),
     (1, 0), (1, -1),
     (2, 0)),

]

N, M = map(int, input().split())
raw = [list(map(int, input().split())) for _ in range(N)]
result = 0
for i in range(N):
    for j in range(M):
        for t in tetro:
            sub = 0
            for r, c in t:
                nr = i + r
                nc = j + c
                if not (N > nr >= 0 and M > nc >= 0):
                    break
                sub += raw[nr][nc]
            else:
                result = max(sub, result)
print(result)
